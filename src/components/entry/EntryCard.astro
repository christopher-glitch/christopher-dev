---
import type { TagModel } from '../../lib/model';
import FormattedDate from '../FormattedDate.astro';

interface Props {
	slug: string;
	title: string;
	pubDate: string;
	tags?: TagModel[];
}

const {slug, title, pubDate, tags} = Astro.props;
---
<div class="card">
	<p class="date">
		<FormattedDate date={pubDate} />
	</p>
	<a href={`/entry/${slug}/`} class="outer-link"><h4 class="title">{title}</h4></a>
	<div class="tags">
		{tags!.map((tag) => (
			<a href={`/tags/${tag.name}`} class="tag">
				#{tag.name}
			</a>
		))
		}
	</div>
</div>

<style>

	a {
		text-decoration: none;
	}

	.title {
		margin: 0;
		color: rgb(var(--black));
		line-height: 1;
	}
	
	.date {
		margin: 0;
		color: rgb(var(--gray));
		font-size: 0.8rem;
	}

	.card {
		display: flex;
		flex-direction: column;
		justify-content: space-around;
		position: relative;
		pointer-events: all;
		width: 90%;
		min-height: 7em;
		gap: 0.1rem;
		background-color: #fff; 
		border: 1px solid #ddd; 
		border-radius: 4px; 
		padding:3%; 
		text-decoration: none; 
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); 
		transition: box-shadow 0.3s ease; 
	}

	.card:hover h4,
	.card:hover .date {
		color: rgb(var(--accent));
	}

	.card:hover {
		box-shadow: 0 4px 8px rgba(0, 0, 0, 0.313); 
	}

	.card .link {
		text-decoration: none;
	}

	.card .outer-link::after {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		z-index: 1;
		content: '';
	}

	.card .tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.tag {
		position: relative;
		z-index: 2;
		pointer-events: all;
		font-size: 1rem;
		border: 2px solid #abdee3;
		padding: 3px 5px;
		border-radius: 7%;
		font-weight: 700;
		transition: background-color 0.3s ease; 
	}

	.tag:hover {
		background-color: #abdee3;
	}

</style>