---
import { SITE_TITLE, PAGE_SIZE } from "../../consts";
import { getCollection } from "astro:content";
import Entry from "../../components/entry/Entry.astro";
import Blog from "../../layouts/Blog.astro";
import Pagination from "../../components/Pagination.astro";
import { SITE_DESCRIPTION } from "../../consts";
import { getEntryResponse } from "../../lib/client";

export const prerender = true;

export async function getStaticPaths() {
	const posts = (await getEntryResponse()).contents.sort(
		(a, b) => Date.parse(b.createdAt) - Date.parse(a.createdAt),
	);
	let params: any[] = [];

	for (let page = 1; page <= posts.length; page++) {
		const startIndex = (page - 1) * PAGE_SIZE;
		const endIndex = startIndex + PAGE_SIZE;
		params.push({
			params: { page: page },
			props: {
				pagePosts: posts.slice(startIndex, endIndex),
				maxPage: Math.ceil(posts.length / PAGE_SIZE),
			},
		});
	}


	return params;
}

const { page } = Astro.params;
const { pagePosts, maxPage } = Astro.props;
---

<Blog title={SITE_TITLE} , description={SITE_DESCRIPTION}>
	<div>
		<Entry posts={pagePosts} />
		<Pagination
			prev={page == 1 ? undefined : `/list/${Number(page) - 1}`}
			next={page == maxPage ? undefined : `/list/${Number(page) + 1}`}
			maxPage={maxPage}
			currentPage={page}
		/>
	</div>
</Blog>
