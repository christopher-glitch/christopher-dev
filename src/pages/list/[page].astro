---
import { SITE_TITLE, PAGE_SIZE } from "../../consts";
import { getCollection } from "astro:content";
import Entry from "../../components/entry/Entry.astro";
import Blog from "../../layouts/Blog.astro";
import Pagination from "../../components/Pagination.astro";
import { SITE_DESCRIPTION } from "../../consts";

export const prerender = true;


export async function getStaticPaths() {
	const posts = (await getCollection("entry")).sort(
		(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
	);
	let params: any[] = [];

	for (let i = 1; i <= posts.length; i++) {
		params.push({
			params: { page: i }
		})
	}

	return params;
}

const { page } = Astro.params;

const startIndex = (page - 1) * PAGE_SIZE
const endIndex = startIndex + PAGE_SIZE
const posts = (await getCollection("entry")).sort(
		(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
const maxPage = Math.ceil(posts.length / PAGE_SIZE);
const postAtThisPage = posts.slice(startIndex, endIndex);
---

<Blog title={SITE_TITLE}, description={SITE_DESCRIPTION}>
	<div>
		<Entry posts={postAtThisPage} />
		<Pagination 
			prev={(page==1)? undefined:`/list/${(Number(page)-1)}`} 
			next={(page==maxPage)? undefined:`/list/${(Number(page)+1)}`} 
			maxPage={maxPage} 
			currentPage={page}/>
	</div>
</Blog>