---
import { SITE_TITLE, PAGE_SIZE } from "../../consts";
import Entry from "../../components/entry/Entry.astro";
import Blog from "../../layouts/Blog.astro";
import Pagination from "../../components/Pagination.astro";
import { getEntryResponse } from "../../lib/client";
import type { TagModel } from "../../lib/model";

export async function getStaticPaths() {
	const posts = (await getEntryResponse()).contents.sort(
		(a, b) => Date.parse(b.createdAt) - Date.parse(a.createdAt),
	);
	const tags = new Set<String>();
	posts.forEach((post) => post.tags.forEach((tag) => tags.add(tag.name)));

	return Array.from(tags).map((tag) => ({
		params: { tag: tag },
		props: {
			filteredPosts: posts.filter((post) => post.tags.find((t) => t.name === tag)),
			maxPage: Math.ceil(posts.length / PAGE_SIZE),
		},
	}));
}

const { tag } = Astro.params;
const { filteredPosts, maxPage } = Astro.props;
const headFilteredPosts = filteredPosts.slice(0, PAGE_SIZE);
---

<Blog title={SITE_TITLE} , description={`Tag:${tag}`}>
	<div>
		<Entry posts={headFilteredPosts} />
		<Pagination
			prev={undefined}
			next={maxPage == 1 ? undefined : `/tags/${tag}/list/2`}
			maxPage={maxPage}
			currentPage={1}
		/>
	</div>
</Blog>
