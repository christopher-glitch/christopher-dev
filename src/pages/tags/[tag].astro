---
import { SITE_TITLE, PAGE_SIZE } from "../../consts";
import { getCollection } from "astro:content";
import Entry from "../../components/entry/Entry.astro";
import Blog from "../../layouts/Blog.astro";
import Pagination from "../../components/Pagination.astro";

export const prerender = true;

export async function getStaticPaths() {
	const posts = (await getCollection('entry')).sort(
		(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
	);
	const tags = new Set<string>();
  posts.forEach(post => post.data.tags?.forEach(tag => tags.add(tag)));

  return Array.from(tags).map(tag => ({
    params: { tag: tag },
    props: { posts: posts },
  }));
}

const { tag } = Astro.params;
const { posts } = Astro.props;

const filteredPosts = posts.filter((post) => post.data.tags?.includes(tag));
const maxPage = Math.ceil(filteredPosts.length/PAGE_SIZE);

const headFilteredPosts = filteredPosts.slice(0, PAGE_SIZE);
---

<Blog title={SITE_TITLE}, description={`Tag:${tag}`}>
	<div>
		<Entry posts={headFilteredPosts} />
		<Pagination 
			prev={ undefined } 
			next={(maxPage==1)? undefined:`/tags/${tag}/list/2`} 
			maxPage={maxPage}
			currentPage={1}
		/>
	</div>
</Blog>

